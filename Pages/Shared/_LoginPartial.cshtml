@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav ml-2">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link btn btn-link navbar-text text-primary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @User.Identity.Name!
                <i class="fas fa-user-circle"></i>
                <i class="fas fa-tools"></i>
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link btn-outline-danger navbar-text text-danger">
                    <i class="fas fa-sign-out-alt"></i>
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item mx-1">
            <a class="nav-link navbar-text btn btn-primary text-white" asp-area="Identity" asp-page="/Account/Register">
                <i class="fas fa-user-plus"></i>
                <i class="fas fa-sign-in-alt"></i>
            </a>
        </li>
        <li class="nav-item mx-1">
            <a class="nav-link navbar-text btn btn-primary text-white" asp-area="Identity" asp-page="/Account/Login">
                <i class="fas fa-user"></i>
                <i class="fas fa-sign-in-alt"></i>
            </a>
        </li>
    }
</ul>
